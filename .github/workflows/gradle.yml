# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Determine latest tag and increment version
      id: tag
      run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0")
          latest_major_version=$(echo $latest_tag | cut -d'v' -f2 | cut -d'.' -f1)
          latest_minor_version=$(echo $latest_tag | cut -d'v' -f2 | cut -d'.' -f2)
          new_minor_version=$((latest_minor_version + 1))
          new_tag="v$latest_major_version.$new_minor_version"
          echo "::set-output name=new_tag::$new_tag"
          
    - name: Configure Git
      run: |
          git config --global user.name "chandrupsj22"
          git config --global user.email "chandru.nandha@outlook.com"

    - name: Push to Git Repository
      env:
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
          GIT_REPOSITORY: github.com/chandrupsj22/Gradle-start-project.git
      run: |
          git remote set-url origin https://$GIT_USERNAME:$GIT_PASSWORD@$GIT_REPOSITORY
          git push origin HEAD
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: build/  
    - name: List Artifacts
      run: |
        echo "Build Artifacts:"
        ls ${{ steps.view.outputs.artifact_folder }}
    - name: Display .jar File Name
      run: |
        echo "The .jar file name is: $(find build/ -name '*.jar')"
    - name: Download and List Artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
        path: build-artifacts
    - name: List Artifact Contents
      run: ls -R build-artifacts/distributions
    
