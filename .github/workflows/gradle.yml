name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Set up Git
      run: |
          git config --global user.name "chandrupsj22"
          git config --global user.email "133023965+chandru-kloudping@users.noreply.github.com"
    - name: Determine Latest Tag
      id: latest_tag
      run: |
        
        latest_major_version="1"
        latest_minor_version="1"
          
        new_tag="v$latest_major_version.$latest_minor_version"
          
        echo "::set-output name=new_tag::$new_tag"
    - name: Create tag
      run: |
        #repo_name=$(basename "${{ github.repository }}")
        workspace=$(basename "${{ github.workspace }}") #The directory where the repository is checked out in the runner.
        Branch=$(basename "${{ github.ref }}")
        tag_name=${{ steps.latest_tag.outputs.new_tag }}.${{ github.run_number }}.${Branch}.${workspace}
        git tag -a -m "Tag created by GitHub Actions" "$tag_name"
        git push origin "$tag_name"
                
    #- name: Build with Gradle
      #uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      #with:
        #arguments: build
    - name: Build with Gradle
      run: |
        ./gradlew build #--no-daemon -g "${{ github.workspace }}/${{ github.run_number }}"
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: build/
    - name: List Artifacts
      run: |
        echo "Build Artifacts:"
        ls ${{ steps.view.outputs.artifact_folder }}
    - name: Display .jar File Name
      run: |
        echo "The .jar file name is: $(find build/ -name '*.jar')"
    - name: Download and List Artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
        path: build-artifacts
    - name: List Artifact Contents
      run: ls -R build-artifacts/distributions
